geom_point()
summary(df)
colnames(df) <- c("Film", "Genre", "CriticRating", "AudienceRating",
"BudgetMillions", "Year")
# categorical variable
df$Year <- factor(df$Year)
df$Genre <- factor(df$Genre)
df$Film <- factor(df$Film)
levels(df$Genre)
levels(df$Film)
summary(df)
#---------------------- Aesthetics
ggplot(data=df, aes(x=CriticRating, y=AudienceRating))
#add Geometry
ggplot(data=df, aes(x=CriticRating, y=AudienceRating)) +
geom_point()
#add color
ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions)) +
geom_point()
ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions))
p <- ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions))
View(p)
p + geom_point()
p + geom_line()
# multiple
p +geom_point() + geom_line()
p  + geom_line() + geom_point()
p + geom_area()
p + geom_
p + geom_bar()
getwd()
df <- read.csv(file.choose())
head(df)
str(df)
nrow(df)
ncol(df)
summary(df)
tail(df)
library(ggplot2)
qplot(data=df, x=Audience.Ratings.., y=Budget.million..)
colnames(df) <- c("Film", "Genre", "CriticRating", "AudienceRating",
"BudgetMillions", "Year")
head(df)
tail(df)
str(df)
# categorical variable
df$Year <- factor(df$Year)
df$Genre <- factor(df$Genre)
df$Film <- factor(df$Film)
levels(df$Genre)
levels(df$Film)
summary(df)
#---------------------- Aesthetics
ggplot(data=df, aes(x=CriticRating, y=AudienceRating))
#add Geometry
ggplot(data=df, aes(x=CriticRating, y=AudienceRating)) +
geom_point()
#add color
ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions)) +
geom_point()
#>> this #1 (we will improve it)
p <- ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions))
# point
p + geom_point()
#line
p + geom_line()
# multiple
p + geom_point() + geom_line()
p + geom_line() + geom_point()
#line
p + geom_line()
#line
p + geom_line()
p <- ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
color=Genre, size=BudgetMillions))
# point
p + geom_point()
q <- ggplot(data=movies)
moveis
df
glipmse(df)
str(df)
q <- ggplot(data=df, aes(x=CriticRating, y= AudienceRating,
color=Genre, size=BudgetMillions))
q + geom_point()
# overriting aes
q + geom_point(aes(size=CriticRating))
# overriting aes
q + geom_point(aes(size=CriticRating/2))
q + geom_point(aes(color=BudgetMillions))
q + geom_point(0)
q + geom_point()
q + geom_point(aes(color=BudgetMillions))
# ex3
q + geom_point(aex(x=BudgetMillions))
# ex3
q + geom_point(aex(x=BudgetMillions))
# ex3
q + geom_point(aes(x=BudgetMillions))
# ex3
q + geom_point(aes(x=BudgetMillions)) +
xlab("Budget")
q + geom_point() + geom_line()
q + geom_point(size=1) + geom_line()
q + geom_point() + geom_line(size=1)
t
# ex3
q + geom_point(aes(x=BudgetMillions)) +
xlab("Budget")
#--------------------- Mapping vs setting
r <- ggplot(data=df, aes(x=CriticRating, y=AudienceRating))
r+ geom_point()
#add color
r + geom_point(color=Genre)
#add color
r + geom_poin t(aex(color=Genre))
#add color
r + geom_point(aex(color=Genre))
#add color
r + geom_point(aes(color=Genre))
#2 setting
r + geom_point(color="DarkGreen")
------------------
r + geom_point(aes(siz=BudgetMillions))
------------------
r + geom_point(aes(size=BudgetMillions))
------------------
r + geom_point(aes(size=BudgetMillions))
------------------
r + geom_point(aes(size=BudgetMillions))
#------------------
r + geom_point(aes(size=BudgetMillions))
r + geom_point(size=10)
r + geom_point(aes(size=10))
#---------------- histogram
s <- ggplot(data=df, aes(x=BudgetMillions))
s +geom_histogram()
s +geom_histogram(binwidth=10)
s + geom_histogram(aes(binwidth=10))
s + geom_histogram(binwidth=10)
s + geom_histogram(binwidth=10, color="Blue")
s + geom_histogram(binwidth=5, color="Blue")
s + geom_histogram(binwidth=5, color="Blue", size=5)
s + geom_histogram(binwidth=5, color="Blue")
# add color
s + geom_histogram(binwidth=5, fill = "Green, color="Blue")
# add color
s + geom_histogram(binwidth=5, fill = "Green", color="Blue")
s + geom_histogram(binwidth=5, aes(fill=Genre))
s + geom_histogram(binwidth=5, aes(fill=Genre), color="Black")
# sometimes you may need density charts
s + geom_density(aes(fill=Genre))
# sometimes you may need density charts
s + geom_density(aes(fill=Genre), position="Stack")
# sometimes you may need density charts
s + geom_density(aes(fill=Genre), position="stack")
s + geom_boxplot()
t + geom_histogram(binwidth=10,
fill="White", color="blue")
#------------------------- layer tips
t <- ggplot(data=df, aes(x=AudienceRating))
t + geom_histogram(binwidth=10,
fill="White", color="blue")
t <- ggplot(data=df)
t + geom_histogram(binwidth = 10,
aes(x=AudienceRating),
fill="White", color="Blue")
t + geom_histogram(binwidth = 10,
aes(x=BudgetMillions),
fill="White", color="Blue")
t + geom_histogram(binwidth = 10,
aes(x=CriticRating),
fill="White", color="Blue")
t <- ggplot()
#-------------------------- statistical transformation
?geom_smooth()
u <- ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
color=Genre))
u +geom_point() + geom_smooth()
u +geom_point() + geom_smooth(fill =NA)
u <- ggplot(data=df, aes(x=Genre, y=AudienceRating),
color=Genre)
u+geom_boxplot()
u <- ggplot(data=df, aes(x=Genre, y=AudienceRating,
color=Genre))
u+geom_boxplot()
u + geom_boxplot(size=1,2)
u + geom_boxplot(size=1.2)
u + geom_boxplot(size=1.2)  + geom_point()
# tip
u + geom_boxplot(size=1.2) +geom_jitter()
# tip
u + geom_boxplot(size=1.2) + geom_jitter()
u + geom_jitter()+ geom_boxplot(size=1.2)
u + geom_jitter()+ geom_boxplot(size=1.2, alpha=0.5)
u + geom_jitter()+ geom_boxplot(size=1.2, alpha=0.7)
u <- ggplot(data=df, aes(x=Genre, y=CriticRating,
color=Genre))
u+geom_boxplot()
u + geom_jitter()+ geom_boxplot(size=1.2, alpha=0.7)
#------------------------- Using Facets
v <- ggplot(data=df, aes(x=BudgetMillions))
v + geom_histogram(binwidth = 10,
aes(fill=Genre))
v + geom_histogram(binwidth = 10,
aes(fill=Genre), color="Black")
v + geom_histogram(binwidth = 10,
aes(fill=Genre))
, color="Black"
v + geom_histogram(binwidth = 10,
aes(fill=Genre), color="Black")
# Facets
v + geom_histogram(binwidth = 10,
aes(fill=Genre), color="Black") +
facet_grid()
# Facets
v + geom_histogram(binwidth = 10,
aes(fill=Genre), color="Black") +
facet_grid(Genre~.)
# Facets
v + geom_histogram(binwidth = 10,
aes(fill=Genre), color="Black") +
facet_grid(Genre~. scales="fee")
# Facets
v + geom_histogram(binwidth = 10,
aes(fill=Genre), color="Black") +
facet_grid(Genre~.,scales="fee")
# Facets
v + geom_histogram(binwidth = 10,
aes(fill=Genre), color="Black") +
facet_grid(Genre~., scales="free")
#scatterplots:
w <- ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
color=Genre))
w + geom_point(size=3) + facet_grid(Genre~.)
w + geom_point(size=3) + facet_grid(.~Year)
w + geom_point(size=3) + facet_grid(Genre~Year)
w + geom_point(size=3) +
geom_smooth() + facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) +
geom_smooth() + facet_grid(Genre~Year)
m <- ggplot(data=df, aes(x=CriticRating, y=AudienceRating,
size=BudgetMillions, color=Genre))
m + geom_point()
m +geom_point() + xlim(50,100)
m + geom_point()
m +geom_point() + xlim(50,100)
m + geom_point()
m +geom_point() + xlim(50,100)
m +geom_point() + xlim(50,100) + ylim(50,100)
m + geom_point() + xlim(50,100) + ylim(50,100)
# won't work well always
n <- ggplot(data=df, aes(x=BudgetMillions))
n + geom_histogram(binwidth=10, aes(fill=Genre), color="black")
n + geom_histogram(binwidth=10, aes(fill=Genre), color="black") +
ylim(0,50)
# instead zoom!
n + geom_histogram(binwidth=10, aes(fill=Genre), color="black") +
coord_cartesian(ylim=c(0,50))
w + geom_point(aes(size=BudgetMillions)) +
geom_smooth() + facet_grid(Genre~Year)
w + geom_point(aes(size=BudgetMillions)) +
geom_smooth() + facet_grid(Genre~Year) + coord_cartesian(ylim=c(0,100))
#---------------- theme
o <- ggplot(data=df, aes(x=BudgetMillions))
o + geom_histogram(binwidth=10
aes(fill=Genre), color="black")
#---------------- theme
o <- ggplot(data=df, aes(x=BudgetMillions))
o + geom_histogram(binwidth=10
aes(fill=Genre), color="black")
#---------------- theme
o <- ggplot(data=df, aes(x=BudgetMillions))
o + geom_histogram(binwidth=10,
aes(fill=Genre), color="black")
h <- o + geom_histogram(binwidth=10,
aes(fill=Genre), color="black")
# label
h + xlab("Hahah!")
# label
h + xlab("Hahah!") + ylab(kikiki)
# label
h + xlab("Hahah!") + ylab("kikiki")
# label format
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30))
# label format
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30))
# tick
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20))
# tick
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20))
?theme
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,0.5))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(0.8,0.5))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(0.8,0.5),
legend.justification = c(1,1))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") + ggtitle("Movie!!")
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") + ggtitle("Movie!!") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") + ggtitle("Movie!!") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title= element_text(size=20))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") + ggtitle("Movie!!") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title= element_text(size=2))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") + ggtitle("Movie!!") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title= element_text(size=23, color="blue"))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") + ggtitle("Movie!!") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title= element_text(size=23, color="blue", family="Overpass"))
# lengend formatting
h + xlab("Hahah!") + ylab("kikiki") + ggtitle("Movie!!") +
theme(axis.title.x = element_text(color="DarkGreen", size=30),
axis.title.y = element_text(color="Red", size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(1,1),
legend.justification = c(1,1),
plot.title= element_text(size=23, color="blue", family="Courier"))
setwd()
setwd()
getwd()
?rm
?rm(list=ls())
?rm(list=ls())
rm(list=ls())
df <- read_csv(file.choose())
df <- read.csv(file.choose())
df
View(df)
install.packages(updateR)
install.packages("updateR")
install.packages("installr")
install.packages("installr")
updateR()
library("installr")
library(stringr)
1
1+1
library("installr")
q()
library(installr)
install.packages("stringr")
install.packages("stringr")
?rm
rm(list = ls())
getwd()
setwd("C:\\Users\\Min\\books")
setwd("C:\\Users\\Min\\books\\R")
setwd("C:\\Users\\Min\\books\\R_start")
setwd("C:\\Users\\Min\\books")
setwd(".\\R_start")
# read data
Chicago <- read.csv("Chicago-F.csv")
Chicago
# read data
Chicago <- read.csv("Chicago-F.csv", row.names=1)
Chicago
Chicago
# read data
Chicago <- read.csv("Chicago-F.csv", row.names=1)
NewYork <- read.csv("NewYork-F.csv", row.names=1)
Huston <- read.csv("Huston-F.csv", row.names=1)
SanFrancisco <- read.csv("SanFrancisco-F.csv", row.names=1)
Houston <- read.csv("Houston-F.csv", row.names=1)
# read data
Chicago <- read.csv("Chicago-F.csv", row.names=1)
NewYork <- read.csv("NewYork-F.csv", row.names=1)
Houston <- read.csv("Houston-F.csv", row.names=1)
SanFrancisco <- read.csv("SanFrancisco-F.csv", row.names=1)
NewYork
SanFrancisco
is.data.frame(Houston)
is.data.frame(SanFrancisco)
Chicago <- as.matric(Chicago)
Chicago <- as.matric(Chicago)
#let's convert to matrices
Chicago <- as.matric(Chicago)
NewYork <- as.matric(NewYork)
Houston <- as.matric(Houston)
SanFrancisco <- as.matric(SanFrancisco)
#let's convert to matrices
Chicago <- as.matrix(Chicago)
NewYork <- as.matrix(NewYork)
Houston <- as.matrix(Houston)
SanFrancisco <- as.matrix(SanFrancisco)
SanFrancisco
is.matric(SanFrancisco)
# let's put all of these into a list
Weather <- list(Chicago, NewYork, Houston, SanFrancisco)
Weather
# let's put all of these into a list
Weather <- list(Chicago=Chicago, NewYork=NewYork, Houston=Houston, SanFrancisco=SanFrancisco)
Weather
#let's try it out
Weather[[3]]
#let's try it out
Weather[3]
Weather$Houston
apply(Weather$Houston,1,mean)
apply(Weather$Houston,1,max)
apply(Weather$Houston,2,max)
