rm(list=ls())
df <- read.csv(file.choose())
getwd()
getwd()
setwd("C:\Users\Decemberkms.000\books\R\R_start")
fin <- read.csv("P3-Future-500-The-Dataset.csv")
setwd("C:\Users\Decemberkms.000\books\R\R_start")
setwd("C:\\Users\\Decemberkms.000\\books\\R\\R_start")
setwd("C:/Users/Decemberkms.000\books")
setwd("C:\\Users\\Decemberkms.000\\books")
setwd("C:\\Users\\Decemberkms.000\\books\\R")
setwd("C:\\Users\\Decemberkms.000\\books\\R\\R_Start")
fin <- read.csv("P3-Future-500-The-Dataset.csv")
str(fin)
tail(fin,n=10)
summary(fin)
#changing from non-factor to factor
fin$ID <- factor(fin$ID)
fin$Inception <- factor(fin$Inception)
# factor variable trap( FVT)
a <- c("12","13","14","12","12")
# factor variable trap( FVT)
a <- c("12","13","14","12","12")
a
typeof(a)
b <- as.numeric(a)
typeof(b)
# converting into numeric for factors
z <-  factor(c("12","13","14","12","12"))
typeof(z)
levels(z)
y <- as.numeric(z)
typeof(y)
y
fin$Expenses <- gsub(" Dollars", "", fin$Expenses)
rm(list=ls())
df <- read.csv(file.choose())
getwd()
setwd("C:\\Users\\Decemberkms.000\\books\\R\\R_Start")
fin <- read.csv("P3-Future-500-The-Dataset.csv")
str(fin)
head(fin,n=10)
tail(fin,n=10)
summary(fin)
#changing from non-factor to factor
fin$ID <- factor(fin$ID)
fin$Inception <- factor(fin$Inception)
# factor variable trap( FVT)
a <- c("12","13","14","12","12")
a
typeof(a)
b <- as.numeric(a)
typeof(b)
# converting into numeric for factors
z <-  factor(c("12","13","14","12","12"))
typeof(z)
levels(z)
y <- as.numeric(z)
typeof(y)
######## CORRECT WAY   when yo want to change factor(numbers) into numberic, first change it into charactors
as.numeric(as.character(z))
head(fin)
str(fin)
fin$Profit
# gsub() and sub()
?sub
fin$Expenses <- gsub(" Dollars", "", fin$Expenses)
fin$Expenses <- gsub(",", "", fin$Expenses)
head(fin)
str(fin)
fin$Revenue <- gsub("\\$", "", fin$Revenue) ### $ sign need \\
fin$Revenue <- gsub(",", "", fin$Revenue)
head(fin)
str(fin)
fin$Growth <- gsub("%", "", fin$Growth) ### $ sign need \\
fin$Growth <- gsub(",", "", fin$Growth)
head(fin)
str(fin)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Expenses <- as.numeric(fin$Expenses)
fin$Growth <- as.numeric(fin$Growth)
head(fin)
str(fin)
summary(fin)
#---------------------- missing data
?NA
fin[!is.na(fin),]  ### ! is not!!
# locating missing data
complete.cases(fin) ########## check if there's na !!
fin[!complete.cases(fin),]
fin[complete.cases(fin),]
fin ################# na and just missing value is different!!!################
fin <- read.csv("P3-Future-500-The-Dataset.csv", na.strings=c("")) ### howto fill missing char with NA!
?complete.cases
########### which()
head(fin)
str(fin)
fin[fin$Revenue == 9746272,]
which(fin$Revenue == 9746272,)
fin[which(fin$Revenue == 9746272,),]  ### this is how to pick filtered data without grabbing NA values
?which
head(fin)
fin[which(fin$Employees ==45),]
# is.na()
head(fin,24)
fin[fin$Expenses == NA,] # you cannot compare NA with anything
a <- c(1,24,543,NA,76,45,NA)
a[is.na(a)]
# two line are the same. first one is to pick if there's na, second one is to pick if there isn't na(but ! is a opposite sign)
fin[is.na(fin$Expenses),]
fin[!complete.cases(fin$Expenses),]
# how to remove a row with NA
fin_backup <- fin
fin[is.na(fin$Industry),]
fin <- fin[!is.na(fin$Industry),] # just reassign variables with the line above
# how to reset index
rownames(fin) <-1:nrow(fin) # jus assign index with rownames
rownames(fin) <- NULL # another way!!!!!
# how to replace missing data
fin[!complete.cases(fin),]
fin[is.na(fin$State) & fin$City == "New York", "State"] <- "NY"
fin[c(11,377),]
fin[is.na(fin$State) & fin$City == "San Francisco", "State"] <- "CA"
fin[c(82,265),]
rm(list=ls())
df <- read.csv(file.choose())
getwd()
setwd("C:\\Users\\Decemberkms.000\\books\\R\\R_Start")
fin <- read.csv("P3-Future-500-The-Dataset.csv")
fin$Inception <- factor(fin$Inception)
#changing from non-factor to factor
fin$ID <- factor(fin$ID)
fin$Expenses <- gsub(" Dollars", "", fin$Expenses)
fin$Expenses <- gsub(",", "", fin$Expenses)
head(fin)
str(fin)
fin$Revenue <- gsub("\\$", "", fin$Revenue) ### $ sign need \\
fin$Revenue <- gsub(",", "", fin$Revenue)
head(fin)
str(fin)
fin$Growth <- gsub("%", "", fin$Growth) ### $ sign need \\
fin$Growth <- gsub(",", "", fin$Growth)
head(fin)
str(fin)
fin$Revenue <- as.numeric(fin$Revenue)
fin$Expenses <- as.numeric(fin$Expenses)
fin$Growth <- as.numeric(fin$Growth)
head(fin)
str(fin)
summary(fin)
fin[!is.na(fin),]  ### ! is not!!
fin[!is.na(fin),]  ### ! is not!!
# locating missing data
complete.cases(fin) ########## check if there's na !!
fin[!complete.cases(fin),]
fin[complete.cases(fin),]
# how to remove a row with NA
fin_backup <- fin
fin[is.na(fin$Industry),]
fin <- fin[!is.na(fin$Industry),] # just reassign variables with the line above
# how to reset index
rownames(fin) <-1:nrow(fin) # jus assign index with rownames
rownames(fin) <- NULL # another way!!!!!
fin[c(11,377),]
fin[c(11,377),]
fin[c(82,265),]
# how to replace missing data
fin[!complete.cases(fin),]
fin
fin$Employees
mean(fin$Employees)
?mean()
fin[fin$Industry == 'Retail',]
fin$Employees[fin$Industry == 'Retail',]
fin[fin$Industry == 'Retail',]
fin[fin$Industry == 'Retail',]$Employees
mean(fin[fin$Industry == 'Retail',]$Employees)
complete.cases(fin[fin$Industry == 'Retail',]$Employees)
fin[fin$Industry == 'Retail',]$Employees
?median()
fin[!complete.cases(fin),]
fin[complete.cases(fin),]
fin[complete.cases(fin),][fin$Industry == 'Retail']
fin[complete.cases(fin),]
fin[complete.cases(fin),]
fin[complete.cases(fin),]$industry
fin[complete.cases(fin),]$Industry
# how to calculate mean or median excluding NA
median(fin[,"Employees"])
# how to calculate mean or median excluding NA
median(fin[,"Employees"], na.rm=True)
# how to calculate mean or median excluding NA
median(fin[,"Employees"], na.rm=T)
mean(fin[,"Employees"], na.rm=T)
mean(fin[,"Employees"])
mean(fin[,"Employees"], na.rm=T)
# how to calculate mean or median excluding NA
median(fin[fin$Inception == "Retail","Employees"], na.rm=T)
# how to calculate mean or median excluding NA
median(fin[fin$Industry == "Retail","Employees"], na.rm=T)
# how to calculate mean or median excluding NA
median(fin[fin$Industry == "Retail","Employees"], na.rm=T)
mean(fin[fin$Industry == "Retail","Employees"], na.rm=T)
# how to calculate mean or median excluding NA
med_emp_retail <- median(fin[fin$Industry == "Retail","Employees"], na.rm=T)
fin[is.na(fin$Employees),]
fin[is.na(fin$Employees) & fin$Industry== "Retail",]
fin[is.na(fin$Employees) & fin$Industry == "Retail", "Employees"]
fin[is.na(fin$Employees) & fin$Industry == "Retail", "Employees"] <- med_emp_retail
fin[3,]
fin[!complete.cases(fin),]
fin[is.na(fin$Employees),]
fin[is.na(fin$Employees), "Employees"]
median(fin[fin$Industry == "Finalcial Services"])
median(fin[fin$Industry == "Finalcial Services"], rm.na=T)
median(fin[fin$Industry == "Finalcial Services"], na.rm=T)
median(fin[fin$Industry == "Finalcial Services", "Employees"], na.rm=T)
median(fin[fin$Industry == "Finalcial Services", "Employees"], na.rm=T)
median(fin[fin$Industry == "Financial Services", "Employees"], na.rm=T)
med_emp_fS <- median(fin[fin$Industry == "Financial Services", "Employees"], na.rm=T)
mean(fin[fin$Industry == "Financial Services", "Employees"], na.rm=T)
fin[233,]
fin[332,]
fin[is.na(fin$Employees) & fin$Industry == "Financial Services", "Employees"]
fin[is.na(fin$Employees) & fin$Industry == "Financial Services", "Employees"] <- med_emp_fS
fin[332,]
fin[!complete.cases(fin),]
fin[is.na(fin$Growth),]
fin[is.na(fin$Growth) & fin$Industry == "Construction",]
mean(fin[fin$Industry == "Construction"], na.rm=T)
mean(fin[fin$Industry == "Construction",], na.rm=T)
mean(fin[fin$Industry == "Construction", "Growth"], na.rm=T)
mean(fin[, "Growth"], na.rm=T)
median(fin[fin$Industry == "Construction", "Growth"], na.rm=T)
median(fin[, "Growth"], na.rm=T)
med_grw_cost <- median(fin[fin$Industry == "Construction", "Growth"], na.rm=T)
typeof(med_grw_cost)
fin[is.na(fin$Growth),]
fin[is.na(fin$Growth),]$Growth
fin[is.na(fin$Growth), "Growth"]
fin[is.na(fin$Growth), "Growth"] <- med_grw_cost
fin[8,]
fin[!complete.cases(fin)]
fin[!complete.cases(fin),]
